---
import { Container } from "../components/Container";
import { Header } from "../components/Header";
import ThemeToggle from "../components/ThemeToggle.astro";

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const pathname = new URL(Astro.request.url).pathname;
const [activeRoute] = pathname.slice(1).split("/");
---

<!DOCTYPE html>
<html lang="en" class="selection:bg-yellow-300 selection:text-black">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {`${title} | Tomasz Chmielnicki`}
    </title>
    <meta name="description" content={description} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="dark:bg-slate-900 dark:text-slate-400 dark:selection:text-black text-slate-500"
  >
    <script is:inline>
      const localSetting = localStorage.getItem("isDarkTheme");

      const isDarkTheme = localSetting
        ? JSON.parse(localSetting)
        : window.matchMedia("(prefers-color-scheme: dark)").matches;

      if (isDarkTheme) {
        document.documentElement.classList.add("dark");
      }
    </script>
    <Container>
      <Header activeRoute={activeRoute}>
        <ThemeToggle />
      </Header>
      <slot />
    </Container>
  </body>
</html>

<style>
  .dark {
    color-scheme: dark;
  }
</style>
